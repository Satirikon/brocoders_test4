{"version":3,"sources":["constants/dataTasks.constants.js","reducers/dataTasks.reducer.js","constants/timer.constants.js","reducers/timer.reducer.js","app.reducer.js","actions/dataTasks.actions.js","helpers/localStorage.js","helpers/math.js","sagas/dataTasks.sagas.js","sagas/timer.sagas.js","app.sagas.js","Components/NotFound/NotFound.jsx","Components/TimerAlert/Alert.jsx","helpers/time.js","actions/timer.actions.js","Components/Timer/Timer.jsx","helpers/taskChart.js","Components/TasksChart/TasksChart.jsx","Components/TasksLog/TasksLog.jsx","Components/DataTasks/DataTasks.jsx","containers/Main.jsx","Components/TimerInfo/TimerInfo.jsx","router/Router.jsx","App.js","helpers/sagas.js","serviceWorker.js","index.js"],"names":["TASKS","ADD_TASKS","DELETE_TASKS","GEN_TASKS","RESET_TASKS","initialState","tasksReducer","state","arguments","length","undefined","action","type","concat","Object","toConsumableArray","payload","tasksCopy","splice","ACTIVE_TIMER","ADD_ACTIVE_TIMER","DELETE_ACTIVE_TIMER","UPDATE_ACTIVE_TIMER","name","start","activeTimerReducer","objectSpread","appReducer","combineReducers","tasks","activeTimer","addTask","task","deleteTask","taskArrayIndex","generateTasks","resetTasks","PREFIX","setItem","key","data","localStorage","getItem","removeItem","generateRandomInt","clear","min","max","Math","round","random","setTasksToLocalStorage","generateTasksSaga","watchData","_ref","regenerator_default","a","wrap","_context","prev","next","select","store","sent","abrupt","JSON","stringify","stop","_marked","range","dayStart","dayEnd","i","_context2","Date","setHours","push","id","uuidv1","now","getTime","duration","put","_marked2","_context3","all","takeLatest","_marked3","setActiveTimerToLocalStorage","deleteActiveTimerFromLocalStorage","updateActiveTimerInLocalStorage","watchActiveTimer","timer_sagas_marked","timer_sagas_marked2","_ref2","currentActiveTimer","delay","timer_sagas_marked3","_context4","_marked4","rootSaga","app_sagas_marked","NotFound","taskId","this","props","match","params","react_default","createElement","className","react_router_dom","to","index_es","variant","color","PureComponent","AlertModal","_this$props","isOpened","onClose","open","aria-labelledby","aria-describedby","onClick","autoFocus","HHMMSS","time","isUTC","date","toISOString","substr","toLocaleTimeString","addActiveTimer","timer","deleteActiveTimer","updateActiveTimer","Timer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleModal","setState","prevState","isModalOpened","onStart","setInterval","onStop","_this$props$activeTim","clearInterval","_this2","_this$state","_this$props$activeTim2","placeholder","value","margin","onChange","e","target","trim","TimerAlert_Alert","Component","connect","dispatch","bindActionCreators","getSeconds","getMinutes","getChartData","dataArr","Array","map","minutes","forEach","end","outp","current","secondsToNextHour","nextHour","seconds","hour","getHours","getMinutesPerHour","item","TasksChart","es6","height","strokeDasharray","dataKey","fill","TasksLog","align","index","component","scope","DataTasks","setActiveTab","event","activeTab","route","history","location","pathname","position","label","react_router","exact","path","withRouter","Main","react","Components_Timer_Timer","Components_DataTasks_DataTasks","TimerInfo","find","t","Router","basename","process","sagaMiddleware","createSagaMiddleware","createStore","parse","reHydrateStore","composeWithDevTools","applyMiddleware","run","appSagas","App","es","router_Router","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ocACaA,EAAQ,QAERC,EAAY,YACZC,EAAe,eACfC,EAAY,YACZC,EAAc,cCArBC,EAAe,GAiBNC,EAfM,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBH,EAAcM,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACrD,OAAQC,EAAOC,MACb,KAAKX,EACH,SAAAY,OAAAC,OAAAC,EAAA,EAAAD,CAAWP,GAAX,CAAkBI,EAAOK,UAC3B,KAAKd,EACH,IAAMe,EAASH,OAAAC,EAAA,EAAAD,CAAOP,GAEtB,OADAU,EAAUC,OAAOP,EAAOK,QAAS,GAC1BC,EACT,KAAKb,EACH,OAAOO,EAAOK,QAAUL,EAAOK,QAAUX,EAC3C,QACE,OAAOE,YCnBAY,EAAe,cACfC,EAAmB,mBACnBC,EAAsB,sBACtBC,EAAsB,sBCG7BjB,EAAe,CAAEkB,KAAM,GAAIC,MAAO,GAezBC,EAbY,WAAkC,IAAjClB,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBH,EAAcM,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAQC,EAAOC,MACb,KAAKQ,EACH,OAAOT,EAAOK,QAChB,KAAKK,EACH,MAAO,CAAEE,KAAM,GAAIC,MAAO,GAC5B,KAAKF,EACH,OAAOR,OAAAY,EAAA,EAAAZ,CAAA,GAAKP,EAAUI,EAAOK,SAC/B,QACE,OAAOT,ICPEoB,EALIC,0BAAgB,CACjCC,MAAOvB,EACPwB,YAAaL,+CCAFM,EAAU,SAAAC,GAAI,MAAK,CAAEpB,KAAMX,EAAWe,QAASgB,IAC/CC,EAAa,SAAAC,GAAc,MAAK,CAC3CtB,KAAMV,EACNc,QAASkB,IAEEC,EAAgB,iBAAO,CAAEvB,KAAMT,IAC/BiC,EAAa,SAAAJ,GAAI,MAAK,CAAEpB,KAAMR,EAAaY,QAASgB,ICb3DK,EAAS,mBAEFC,EAAU,SAACC,EAAKC,GAAN,OACrBC,aAAaH,QAAb,GAAAzB,OAAwBwB,GAAxBxB,OAAiC0B,GAAOC,IAE7BE,EAAU,SAAAH,GAAG,OAAIE,aAAaC,QAAb,GAAA7B,OAAwBwB,GAAxBxB,OAAiC0B,KAElDI,EAAa,SAAAJ,GAAG,OAAIE,aAAaE,WAAb,GAAA9B,OAA2BwB,GAA3BxB,OAAoC0B,KCPxDK,GDSQH,aAAaI,MCTD,SAACC,EAAKC,GAAN,OAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,GAAOA,gBCYjCK,cAMAC,cAqBOC,GA3BjB,SAAUF,EAAVG,GAAA,IAAAtC,EAAAa,EAAA,OAAA0B,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACgB,OADmB5C,EAAnCsC,EAAmCtC,QAAnC0C,EAAAE,KAAA,EACsBC,YAAO,SAAAC,GAAK,OAAIA,EAAMjC,QAD5C,UACQA,EADR6B,EAAAK,KAEO/C,EAFP,CAAA0C,EAAAE,KAAA,eAAAF,EAAAM,OAAA,SAEuBrB,EAAW3C,IAFlC,OAGEsC,EAAQtC,EAAOiE,KAAKC,UAAUrC,IAHhC,wBAAA6B,EAAAS,SAAAC,GAMA,SAAUhB,IAAV,IAAAiB,EAAAC,EAAAC,EAAA1C,EAAA2C,EAAA,OAAAjB,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OASE,IARMS,EAAQzB,EAAkB,GAAI,KAE9B0B,EAAW,IAAII,MACZC,SAAS,EAAG,EAAG,EAAG,IACrBJ,EAAS,IAAIG,MACZC,SAAS,GAAI,GAAI,GAAI,KAExB9C,EAAQ,GACH2C,EAAI,EAAGA,EAAIH,EAAOG,IACzB3C,EAAM+C,KAAK,CACTC,GAAIC,MACJvD,KAAI,QAAAV,OAAU2D,EAAI,EAAd,KAAA3D,OAAmB6D,KAAKK,OAC5BvD,MAAOoB,EAAkB0B,EAASU,UAAWT,EAAOS,WACpDC,SAAsC,GAA5BrC,EAAkB,GAAI,IAAW,MAI/C,OAlBF6B,EAAAb,KAAA,EAkBQsB,YAAI9C,EAAWP,IAlBvB,wBAAA4C,EAAAN,SAAAgB,GAqBO,SAAU9B,IAAV,OAAAE,EAAAC,EAAAC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACL,OADKwB,EAAAxB,KAAA,EACCyB,YAAI,CACRC,YAAWrF,EAAWkD,GACtBmC,YAAWpF,EAAciD,GACzBmC,YAAWlF,EAAa+C,GACxBmC,YAAWnF,EAAWiD,KALnB,wBAAAgC,EAAAjB,SAAAoB,kBC/BGC,eAIAC,eAIAC,gBASOC,IAjBjB,SAAUH,GAAVlC,GAAA,IAAAtC,EAAA,OAAAuC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OADuC5C,EAAzCsC,EAAyCtC,QAAzC0C,EAAAE,KAAA,EACQtB,EAAQnB,EAAc8C,KAAKC,UAAUlD,IAD7C,wBAAA0C,EAAAS,SAAAyB,GAIA,SAAUH,KAAV,OAAAlC,EAAAC,EAAAC,KAAA,SAAAgB,GAAA,cAAAA,EAAAd,KAAAc,EAAAb,MAAA,OACE,OADFa,EAAAb,KAAA,EACQjB,EAAWxB,GADnB,wBAAAsD,EAAAN,SAAA0B,GAIA,SAAUH,GAAVI,GAAA,IAAA9E,EAAA+E,EAAA,OAAAxC,EAAAC,EAAAC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,OACE,OAD0C5C,EAA5C8E,EAA4C9E,QAA5CoE,EAAAxB,KAAA,EACQoC,YAAM,KADd,OAE6B,OAF7BZ,EAAAxB,KAAA,EAEmCC,YAAO,SAAAtD,GAAK,OAAIA,EAAMY,KAFzD,OAGE,OADM4E,EAFRX,EAAArB,KAAAqB,EAAAxB,KAAA,EAGQtB,EACJnB,EACA8C,KAAKC,UAALpD,OAAAY,EAAA,EAAAZ,CAAA,GAAoBiF,EAAuB/E,KAL/C,wBAAAoE,EAAAjB,SAAA8B,GASO,SAAUN,KAAV,OAAApC,EAAAC,EAAAC,KAAA,SAAAyC,GAAA,cAAAA,EAAAvC,KAAAuC,EAAAtC,MAAA,OACL,OADKsC,EAAAtC,KAAA,EACCyB,YAAI,CACRC,YAAWlE,EAAkBoE,IAC7BF,YAAWjE,EAAqBoE,IAChCH,YAAWhE,EAAqBoE,MAJ7B,wBAAAQ,EAAA/B,SAAAgC,oBCtBkBC,IAAV,SAAUA,KAAV,OAAA7C,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACb,OADaF,EAAAE,KAAA,EACPyB,YAAI,CAAChC,IAAasC,OADX,wBAAAjC,EAAAS,SAAAkC,4CC0BAC,4LAxBJ,IACCC,EAAWC,KAAKC,MAAMC,MAAMC,OAA5BJ,OACR,OACEK,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,cACbF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,kBACXP,GAAU,uBACTA,GAAF,QAAA1F,OAAoB0F,EAApB,mBAEHK,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACbF,EAAApD,EAAAqD,cAACE,GAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,QACrBF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNL,UAAU,uBAHZ,qBAXWM,kBC8CRC,4LAtCJ,IAAAC,EACuBd,KAAKC,MAA3Bc,EADDD,EACCC,SAAUC,EADXF,EACWE,QAClB,OACEZ,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEQ,KAAMF,EACNG,kBAAgB,qBAChBC,mBAAiB,2BACjBb,UAAU,eAEVF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAaH,UAAU,sBACpB,mBAEHF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAmBH,UAAU,4BAA7B,qFAKFF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEH,UAAU,sBACVc,QAASJ,EACTL,MAAM,UACNU,WAAS,GAJX,kBApBeT,kBCZZU,GAAS,SAACC,EAAMC,GAC3B,IAAMC,EAAO,IAAIvD,KAAKqD,GACtB,OAAIC,EAAcC,EAAKC,cAAcC,OAAO,GAAI,GACzCF,EAAKG,sBCGDC,GAAiB,SAAAC,GAAK,MAAK,CACtC1H,KAAMQ,EACNJ,QAASsH,IAEEC,GAAoB,iBAAO,CAAE3H,KAAMS,IACnCmH,GAAoB,SAAAF,GAAK,MAAK,CACzC1H,KAAMU,EACNN,QAASsH,ICILG,uBACJ,SAAAA,EAAYhC,GAAO,IAAAiC,EAAA5H,OAAA6H,EAAA,EAAA7H,CAAA0F,KAAAiC,IACjBC,EAAA5H,OAAA8H,EAAA,EAAA9H,CAAA0F,KAAA1F,OAAA+H,EAAA,EAAA/H,CAAA2H,GAAAK,KAAAtC,KAAMC,KAcRsC,YAAc,kBACZL,EAAKM,SAAS,SAAAC,GAAS,MAAK,CAAEC,eAAgBD,EAAUC,kBAhBvCR,EAkBnBS,QAAU,WAAwB,IAAvB3H,EAAuBhB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAfkE,KAAKK,MACtB2D,EAAKjC,MAAM4B,eAAe,CAAE7G,QAAOD,KAAMmH,EAAKjC,MAAM3E,YAAYP,OAChEmH,EAAKJ,MAAQc,YAAY,WACvBV,EAAKM,SAAS,CACZ/D,SAAUP,KAAKK,MAAQ2D,EAAKjC,MAAM3E,YAAYN,SAE/C,MAxBckH,EA2BnBW,OAAS,WAAM,IAAAC,EACWZ,EAAKjC,MAAM3E,YAA3BP,EADK+H,EACL/H,KAAMC,EADD8H,EACC9H,MACd,IAAKD,EAAM,OAAOmH,EAAKK,cAEvBQ,cAAcb,EAAKJ,OAEnBI,EAAKjC,MAAM1E,QAAQ,CACjB8C,GAAIC,MACJtD,QACAyD,SAAUyD,EAAKnI,MAAM0E,SACrB1D,SAGFmH,EAAKjC,MAAM8B,oBACXG,EAAKM,SAAS,CAAE/D,SAAU,KAzCT,IAETzD,EAAUiF,EAAM3E,YAAhBN,MAFS,OAGjBkH,EAAKJ,MAAQ,KACbI,EAAKnI,MAAQ,CACX0E,SAAoB,IAAVzD,EAAc,EAAIkD,KAAKK,MAAQvD,EACzC0H,eAAe,GANAR,oFAWblC,KAAKC,MAAM3E,YAAYN,OACzBgF,KAAK2C,QAAQ3C,KAAKC,MAAM3E,YAAYN,wCAgC/B,IAAAgI,EAAAhD,KAAAiD,EAC6BjD,KAAKjG,MAAjC0E,EADDwE,EACCxE,SAAUiE,EADXO,EACWP,cADXQ,EAEiBlD,KAAKC,MAAM3E,YAA3BN,EAFDkI,EAEClI,MAAOD,EAFRmI,EAEQnI,KACf,OACEqF,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,SACbF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEpC,GAAG,gBACH8E,YAAY,oBACZC,MAAOrI,EACPsI,OAAO,SACP/C,UAAU,aACVgD,SAAU,SAAAC,GAAC,OACTP,EAAK/C,MAAM+B,kBAAkB,CAAEjH,KAAMwI,EAAEC,OAAOJ,MAAMK,YAGxDrD,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAQH,UAAU,gBAAgBgB,GAAO7C,GAAU,MAEhDzD,GACDoF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNL,UAAU,gBACVc,QAASpB,KAAK6C,QAJhB,SAUA7H,GACAoF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNL,UAAU,gBACVc,QAAS,kBAAM4B,EAAKL,YAJtB,SAUFvC,EAAApD,EAAAqD,cAACqD,GAAD,CAAY3C,SAAU2B,EAAe1B,QAAShB,KAAKuC,sBApFvCoB,cAoGLC,eAXS,SAAA7J,GAAK,MAAK,CAAEuB,YAAavB,EAAMuB,cAC5B,SAAAuI,GAAQ,OACjCC,6BACE,CAAEjC,kBAAgBE,qBAAmBC,qBAAmBzG,WACxDsI,IAOWD,CAGb3B,sBCxHI8B,GAAa,SAAAxC,GAAI,OAAIA,EAAKwC,aAAmC,GAApBxC,EAAKyC,cA6BvCC,GAAe,SAAA5I,GAC1B,IAAI6I,EAAU5J,OAAAC,EAAA,EAAAD,CAAI,IAAI6J,MAAM,KAAKC,IAAI,iBAAO,CAC1CC,QAAS,KAQX,OANAhJ,EAAMiJ,QAAQ,SAAA9I,IA/BU,SAACR,EAAOyD,GAQhC,IAPA,IAAM8F,EAAM,IAAIrG,MAAMlD,IAASyD,GAGzB+F,EAAO,GAETC,EAJJzJ,EAAQ,IAAIkD,KAAKlD,GAMVyJ,EAAUF,GAAK,CACpB,IAAMG,EAAoB,KAAUX,GAAWU,GAEzCE,EAAW,IAAIzG,MAAMuG,EAA8B,IAApBC,GAC/BE,EACJD,EAAWJ,EACPR,GAAWQ,GAAOR,GAAWU,GAC7BC,EAENF,EAAKpG,KAAK,CACRyG,KAAMJ,EAAQK,WACdT,QAAS7H,KAAKC,MAAOmI,EAAU,GAAM,KAAO,MAE9CH,EAAUE,EAGZ,OAAOH,GAQkBO,CAAkBvJ,EAAKR,MAAOQ,EAAKiD,UAC3C6F,QAAQ,SAAAzG,GACrBqG,EAAQrG,EAAMgH,MAAMR,QAAUxG,EAAMwG,YAGjCH,EAAQE,IAAI,SAAAY,GAAI,OAAA1K,OAAAY,EAAA,EAAAZ,CAAA,GAClB0K,EADkB,CAErBX,QAAS7H,KAAKC,MAAqB,EAAfuI,EAAKX,SAAe,OCtBtCY,4LACK,IAAAnE,EACsCd,KAAKC,MAA1C5E,EADDyF,EACCzF,MAAOM,EADRmF,EACQnF,cAAeC,EADvBkF,EACuBlF,WAExBsI,EAAUD,GAAa5I,GAC7B,OACE+E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,eACbF,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,CAAqBC,OAAQ,KAC3B/E,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,CAAU5E,UAAU,YAAYtE,KAAMkI,GACpC9D,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,CAAeE,gBAAgB,QAC/BhF,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,MACA9E,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,MACA9E,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,MACA9E,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,MACA9E,EAAApD,EAAAqD,cAAC6E,GAAA,EAAD,CAAKG,QAAQ,UAAUC,KAAK,cAIhClF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNL,UAAU,sBACVc,QAASzF,GAJX,YASAyE,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNL,UAAU,sBACVc,QAAS,kBAAMxF,MAJjB,qBA3BiB+H,cAyDVC,eAjBS,SAAA7J,GAAK,MAAK,CAAEsB,MAAOtB,EAAMsB,QACtB,SAAAwI,GAAQ,OACjCC,6BAAmB,CAAEnI,gBAAeC,cAAciI,IAerCD,CAGbqB,IC9DIM,4LACK,IAAAzE,EACuBd,KAAKC,MAA3B5E,EADDyF,EACCzF,MAAOI,EADRqF,EACQrF,WACf,OACE2E,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACbF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,eACAL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,QACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,cACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,YACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,cACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,QACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,YAGJpF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACGpF,EAAM+I,IAAI,SAAC5I,EAAMiK,GAAP,OACTrF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAU1E,IAAK0J,GACbrF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAWiF,UAAU,KAAKC,MAAM,OAC7BF,EAAQ,GAEXrF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAUhK,EAAKT,MAChCqF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAUlE,GAAO9F,EAAKR,QACvCoF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UACdlE,GAAO9F,EAAKR,MAAQQ,EAAKiD,WAE5B2B,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UACdlE,GAAO9F,EAAKiD,UAAU,IAEzB2B,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,SAASlF,UAAU,WAClCF,EAAApD,EAAAqD,cAACE,GAAA,EAAD,CAAMC,GAAE,UAAAnG,OAAYmB,EAAK6C,IAAMiC,UAAU,QACvCF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEH,UAAU,gBACVI,QAAQ,YACRC,MAAM,WAHR,UASJP,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,SAASlF,UAAU,WAClCF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEH,UAAU,gBACVI,QAAQ,YACRC,MAAM,UACNS,QAAS,kBAAM3F,EAAWgK,KAJ5B,wBA3CK9B,cA6ERC,eAhBS,SAAA7J,GAAK,MAAK,CAAEsB,MAAOtB,EAAMsB,QACtB,SAAAwI,GAAQ,OACjCC,6BAAmB,CAAErI,cAAcoI,IActBD,CAGb2B,ICzFIK,eACJ,SAAAA,EAAY3F,GAAO,IAAAiC,EAAA,OAAA5H,OAAA6H,EAAA,EAAA7H,CAAA0F,KAAA4F,IACjB1D,EAAA5H,OAAA8H,EAAA,EAAA9H,CAAA0F,KAAA1F,OAAA+H,EAAA,EAAA/H,CAAAsL,GAAAtD,KAAAtC,KAAMC,KAOR4F,aAAe,SAACC,EAAOC,GACrB,GAAI7D,EAAKnI,MAAMgM,YAAcA,EAA7B,CACA7D,EAAKM,SAAS,CAAEuD,cAChB,IAAMC,EAAsB,IAAdD,EAAkB,IAAM,SACtC7D,EAAKjC,MAAMgG,QAAQ7H,KAAK4H,KATxB9D,EAAKnI,MAAQ,CACXgM,UAA4C,WAAjC7D,EAAKjC,MAAMiG,SAASC,SAAwB,EAAI,GAJ5CjE,wEAcV,IACC6D,EAAc/F,KAAKjG,MAAnBgM,UACR,OACE3F,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,aACbF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAQ2F,SAAS,UACfhG,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEH,UAAU,cACV8C,MAAO2C,EACPzC,SAAUtD,KAAK6F,cAEfzF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAKH,UAAU,aAAa+F,MAAM,cAClCjG,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAKH,UAAU,aAAa+F,MAAM,kBAItCjG,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAId,UAAWH,KACjCnF,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASd,UAAWT,aA/BtBtB,aA4CT8C,gBAAWb,ICpCXc,oLATX,OACEtG,EAAApD,EAAAqD,cAACsG,EAAA,SAAD,KACEvG,EAAApD,EAAAqD,cAACuG,GAAD,MACAxG,EAAApD,EAAAqD,cAACwG,GAAD,cALWlD,aCUbmD,4LACK,IACCzI,EAAO2B,KAAKC,MAAMC,MAAMC,OAAxB9B,GACF7C,EAAOwE,KAAKC,MAAM5E,MAAM0L,KAAK,SAAAC,GAAC,OAAIA,EAAE3I,KAAOA,IACjD,OAAK7C,EAEH4E,EAAApD,EAAAqD,cAAA,WACED,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,WACAL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,QACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,cACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,YACApF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAjB,gBAGJpF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,KACEL,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAWiF,UAAU,KAAKC,MAAM,OAC7BnK,EAAK6C,IAER+B,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAUhK,EAAKT,MAChCqF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UAAUlE,GAAO9F,EAAKR,QACvCoF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UACdlE,GAAO9F,EAAKR,MAAQQ,EAAKiD,WAE5B2B,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CAAW+E,MAAM,UACdlE,GAAO9F,EAAKiD,UAAU,OAM/B2B,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,WACbF,EAAApD,EAAAqD,cAACE,GAAA,EAAD,CAAMC,GAAG,IAAIF,UAAU,QACrBF,EAAApD,EAAAqD,cAACI,GAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNL,UAAU,uBAHZ,cAhCUF,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,CAAU9F,GAAE,QAAAnG,OAAUgE,YAJpBsF,cA4DTC,eAFS,SAAA7J,GAAK,MAAK,CAAEsB,MAAOtB,EAAMsB,QAElCuI,CAAyBkD,ICjDzBG,oLAjBX,OACE7G,EAAApD,EAAAqD,cAACE,GAAA,EAAD,CAAe2G,SAAUC,oBACvB/G,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,KACElG,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,gBAAgBd,UAAW5F,KAC7CM,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAad,UAAWoB,KAC1C1G,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,CAAOC,OAAK,EAACC,KAAM,CAAC,IAAK,UAAWd,UAAWgB,KAC/CtG,EAAApD,EAAAqD,cAACiG,GAAA,EAAD,CAAU9F,GAAI,kBARHmD,aCKfyD,WAAiBC,eACjB/J,GAAQgK,sBACZnM,ECV4B,SAAA6L,GAC5B,IAAI3L,EAAQa,EAAQ1C,GAChB8B,EAAcY,EAAQvB,GAEtB2C,EAAQ,GAGZ,OAFIjC,IAAOiC,EAAMjC,MAAQoC,KAAK8J,MAAMlM,IAChCC,IAAagC,EAAMhC,YAAcmC,KAAK8J,MAAMjM,IACzCgC,EDIPkK,GACAC,+BAAoBC,0BAAgBN,MAEtCA,GAAeO,IAAIC,QAcJC,oLAVX,OACEzH,EAAApD,EAAAqD,cAACyH,EAAA,EAAD,CAAUxK,MAAOA,IACf8C,EAAApD,EAAAqD,cAAA,OAAKC,UAAU,OACbF,EAAApD,EAAAqD,cAAC0H,GAAD,eALQpE,aEREqE,QACW,cAA7BC,OAAO/B,SAASgC,UAEe,UAA7BD,OAAO/B,SAASgC,UAEhBD,OAAO/B,SAASgC,SAAShI,MACvB,2DCZNiI,IAASC,OAAOhI,EAAApD,EAAAqD,cAACgI,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3442c013.chunk.js","sourcesContent":["//Local Storage\nexport const TASKS = 'tasks';\n//Reducer\nexport const ADD_TASKS = 'ADD_TASKS';\nexport const DELETE_TASKS = 'DELETE_TASKS';\nexport const GEN_TASKS = 'GEN_TASKS';\nexport const RESET_TASKS = 'RESET_TASKS';\n","import {\n  ADD_TASKS,\n  DELETE_TASKS,\n  RESET_TASKS\n} from '../constants/dataTasks.constants';\n\nconst initialState = [];\n\nconst tasksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TASKS:\n      return [...state, action.payload];\n    case DELETE_TASKS:\n      const tasksCopy = [...state];\n      tasksCopy.splice(action.payload, 1);\n      return tasksCopy;\n    case RESET_TASKS:\n      return action.payload ? action.payload : initialState;\n    default:\n      return state;\n  }\n};\n\nexport default tasksReducer;\n","export const ACTIVE_TIMER = 'activeTimer';\nexport const ADD_ACTIVE_TIMER = 'ADD_ACTIVE_TIMER';\nexport const DELETE_ACTIVE_TIMER = 'DELETE_ACTIVE_TIMER';\nexport const UPDATE_ACTIVE_TIMER = 'UPDATE_ACTIVE_TIMER';\n","import {\r\n  ADD_ACTIVE_TIMER,\r\n  DELETE_ACTIVE_TIMER,\r\n  UPDATE_ACTIVE_TIMER\r\n} from '../constants/timer.constants';\r\n\r\nconst initialState = { name: '', start: 0 };\r\n\r\nconst activeTimerReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_ACTIVE_TIMER:\r\n      return action.payload;\r\n    case DELETE_ACTIVE_TIMER:\r\n      return { name: '', start: 0 };\r\n    case UPDATE_ACTIVE_TIMER:\r\n      return { ...state, ...action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default activeTimerReducer;\r\n","import { combineReducers } from 'redux';\n\nimport tasksReducer from './reducers/dataTasks.reducer';\nimport activeTimerReducer from './reducers/timer.reducer';\n\nconst appReducer = combineReducers({\n  tasks: tasksReducer,\n  activeTimer: activeTimerReducer\n});\n\nexport default appReducer;\n","import {\n  ADD_TASKS,\n  DELETE_TASKS,\n  GEN_TASKS,\n  RESET_TASKS\n} from '../constants/dataTasks.constants';\n\nexport const addTask = task => ({ type: ADD_TASKS, payload: task });\nexport const deleteTask = taskArrayIndex => ({\n  type: DELETE_TASKS,\n  payload: taskArrayIndex\n});\nexport const generateTasks = () => ({ type: GEN_TASKS });\nexport const resetTasks = task => ({ type: RESET_TASKS, payload: task });\n","const PREFIX = 'brocoders:test4:';\n\nexport const setItem = (key, data) =>\n  localStorage.setItem(`${PREFIX}${key}`, data);\n\nexport const getItem = key => localStorage.getItem(`${PREFIX}${key}`);\n\nexport const removeItem = key => localStorage.removeItem(`${PREFIX}${key}`);\n\nexport const clear = localStorage.clear;\n","export const generateRandomInt = (min, max) =>\n  Math.round(Math.random() * (max - min) + min);\n","import uuidv1 from 'uuid/v1';\nimport { put, all, takeLatest, select } from 'redux-saga/effects';\nimport { resetTasks } from '../actions/dataTasks.actions';\nimport {\n  ADD_TASKS,\n  DELETE_TASKS,\n  GEN_TASKS,\n  RESET_TASKS,\n  TASKS\n} from '../constants/dataTasks.constants';\nimport { setItem, removeItem } from '../helpers/localStorage';\nimport { generateRandomInt } from '../helpers/math';\n\nfunction* setTasksToLocalStorage({ payload }) {\n  const tasks = yield select(store => store.tasks);\n  if (!payload) return removeItem(TASKS);\n  setItem(TASKS, JSON.stringify(tasks));\n}\n\nfunction* generateTasksSaga() {\n  const range = generateRandomInt(10, 15);\n\n  const dayStart = new Date();\n  dayStart.setHours(0, 0, 0, 0);\n  const dayEnd = new Date();\n  dayEnd.setHours(23, 59, 59, 999);\n\n  let tasks = [];\n  for (let i = 0; i < range; i++) {\n    tasks.push({\n      id: uuidv1(),\n      name: `task ${i + 1}_${Date.now()}`,\n      start: generateRandomInt(dayStart.getTime(), dayEnd.getTime()),\n      duration: generateRandomInt(10, 90) * 60 * 1000\n    });\n  }\n\n  yield put(resetTasks(tasks));\n}\n\nexport function* watchData() {\n  yield all([\n    takeLatest(ADD_TASKS, setTasksToLocalStorage),\n    takeLatest(DELETE_TASKS, setTasksToLocalStorage),\n    takeLatest(RESET_TASKS, setTasksToLocalStorage),\n    takeLatest(GEN_TASKS, generateTasksSaga)\n  ]);\n}\n","import { all, takeLatest, delay, select } from 'redux-saga/effects';\r\nimport {\r\n  ADD_ACTIVE_TIMER,\r\n  DELETE_ACTIVE_TIMER,\r\n  UPDATE_ACTIVE_TIMER,\r\n  ACTIVE_TIMER\r\n} from '../constants/timer.constants';\r\nimport { setItem, removeItem } from '../helpers/localStorage';\r\n\r\nfunction* setActiveTimerToLocalStorage({ payload }) {\r\n  yield setItem(ACTIVE_TIMER, JSON.stringify(payload));\r\n}\r\n\r\nfunction* deleteActiveTimerFromLocalStorage() {\r\n  yield removeItem(ACTIVE_TIMER);\r\n}\r\n\r\nfunction* updateActiveTimerInLocalStorage({ payload }) {\r\n  yield delay(500);\r\n  const currentActiveTimer = yield select(state => state[ACTIVE_TIMER]);\r\n  yield setItem(\r\n    ACTIVE_TIMER,\r\n    JSON.stringify({ ...currentActiveTimer, ...payload })\r\n  );\r\n}\r\n\r\nexport function* watchActiveTimer() {\r\n  yield all([\r\n    takeLatest(ADD_ACTIVE_TIMER, setActiveTimerToLocalStorage),\r\n    takeLatest(DELETE_ACTIVE_TIMER, deleteActiveTimerFromLocalStorage),\r\n    takeLatest(UPDATE_ACTIVE_TIMER, updateActiveTimerInLocalStorage)\r\n  ]);\r\n}\r\n","import { all } from 'redux-saga/effects';\nimport { watchData } from './sagas/dataTasks.sagas';\nimport { watchActiveTimer } from './sagas/timer.sagas';\n\nexport default function* rootSaga() {\n  yield all([watchData(), watchActiveTimer()]);\n}\n","import React, { PureComponent } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Button } from '@material-ui/core';\nimport './NotFound.scss';\n\nclass NotFound extends PureComponent {\n  render() {\n    const { taskId } = this.props.match.params;\n    return (\n      <div className=\"error-page\">\n        <div className=\"error-message\">\n          {!taskId && 'Page is not found.'}\n          {!!taskId && `Task ${taskId} is not found.`}\n        </div>\n        <div className=\"wrapper\">\n          <Link to=\"/\" className=\"link\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"action-button right\"\n            >\n              Go Back\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default NotFound;\n","import React, { PureComponent } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport './Alert.scss';\nimport PropTypes from 'prop-types';\n\nclass AlertModal extends PureComponent {\n  render() {\n    const { isOpened, onClose } = this.props;\n    return (\n      <Dialog\n        open={isOpened}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className=\"alert-modal\"\n      >\n        <DialogTitle className=\"alert-dialog-title\">\n          {'Empty task name'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText className=\"alert-dialog-description\">\n            You are trying to close your task without a name, enter the title\n            and try again!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            className=\"alert-dialog-button\"\n            onClick={onClose}\n            color=\"primary\"\n            autoFocus\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nAlertModal.propTypes = {\n  isOpened: PropTypes.bool,\n  onClose: PropTypes.func\n};\n\nexport default AlertModal;\n","export const HHMMSS = (time, isUTC) => {\n  const date = new Date(time);\n  if (isUTC) return date.toISOString().substr(11, 8);\n  return date.toLocaleTimeString();\n};\n","import {\r\n  ADD_ACTIVE_TIMER,\r\n  DELETE_ACTIVE_TIMER,\r\n  UPDATE_ACTIVE_TIMER\r\n} from '../constants/timer.constants';\r\n\r\nexport const addActiveTimer = timer => ({\r\n  type: ADD_ACTIVE_TIMER,\r\n  payload: timer\r\n});\r\nexport const deleteActiveTimer = () => ({ type: DELETE_ACTIVE_TIMER });\r\nexport const updateActiveTimer = timer => ({\r\n  type: UPDATE_ACTIVE_TIMER,\r\n  payload: timer\r\n});\r\n","import React, { Component } from 'react';\r\nimport { Button, TextField, Avatar } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport uuidv1 from 'uuid/v1';\r\nimport AlertModal from '../TimerAlert/Alert';\r\nimport { addTask } from '../../actions/dataTasks.actions';\r\nimport { HHMMSS } from '../../helpers/time';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  addActiveTimer,\r\n  deleteActiveTimer,\r\n  updateActiveTimer\r\n} from '../../actions/timer.actions';\r\n\r\nimport './Timer.scss';\r\n\r\nclass Timer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { start } = props.activeTimer;\r\n    this.timer = null;\r\n    this.state = {\r\n      duration: start === 0 ? 0 : Date.now() - start,\r\n      isModalOpened: false\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.activeTimer.start)\r\n      this.onStart(this.props.activeTimer.start);\r\n  }\r\n\r\n  toggleModal = () =>\r\n    this.setState(prevState => ({ isModalOpened: !prevState.isModalOpened }));\r\n\r\n  onStart = (start = Date.now()) => {\r\n    this.props.addActiveTimer({ start, name: this.props.activeTimer.name });\r\n    this.timer = setInterval(() => {\r\n      this.setState({\r\n        duration: Date.now() - this.props.activeTimer.start\r\n      });\r\n    }, 1000);\r\n  };\r\n\r\n  onStop = () => {\r\n    const { name, start } = this.props.activeTimer;\r\n    if (!name) return this.toggleModal();\r\n\r\n    clearInterval(this.timer);\r\n\r\n    this.props.addTask({\r\n      id: uuidv1(),\r\n      start,\r\n      duration: this.state.duration,\r\n      name\r\n    });\r\n\r\n    this.props.deleteActiveTimer();\r\n    this.setState({ duration: 0 });\r\n  };\r\n\r\n  render() {\r\n    const { duration, isModalOpened } = this.state;\r\n    const { start, name } = this.props.activeTimer;\r\n    return (\r\n      <div className=\"Timer\">\r\n        <TextField\r\n          id=\"standard-bare\"\r\n          placeholder=\"Name of your task\"\r\n          value={name}\r\n          margin=\"normal\"\r\n          className=\"text-field\"\r\n          onChange={e =>\r\n            this.props.updateActiveTimer({ name: e.target.value.trim() })\r\n          }\r\n        />\r\n        <Avatar className=\"timer-circle\">{HHMMSS(duration, true)}</Avatar>\r\n\r\n        {!!start && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"action-button\"\r\n            onClick={this.onStop}\r\n          >\r\n            Stop\r\n          </Button>\r\n        )}\r\n\r\n        {!start && (\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className=\"action-button\"\r\n            onClick={() => this.onStart()}\r\n          >\r\n            Start\r\n          </Button>\r\n        )}\r\n\r\n        <AlertModal isOpened={isModalOpened} onClose={this.toggleModal} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = state => ({ activeTimer: state.activeTimer });\r\nconst mapDispatchToProps = dispatch =>\r\n  bindActionCreators(\r\n    { addActiveTimer, deleteActiveTimer, updateActiveTimer, addTask },\r\n    dispatch\r\n  );\r\n\r\nTimer.propTypes = {\r\n  addTimer: PropTypes.func\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Timer);\r\n","const getSeconds = time => time.getSeconds() + time.getMinutes() * 60;\n\nconst getMinutesPerHour = (start, duration) => {\n  const end = new Date(+start + +duration);\n  start = new Date(start);\n\n  const outp = [];\n\n  let current = start;\n\n  while (current < end) {\n    const secondsToNextHour = 60 * 60 - getSeconds(current);\n\n    const nextHour = new Date(+current + secondsToNextHour * 1000);\n    const seconds =\n      nextHour > end\n        ? getSeconds(end) - getSeconds(current)\n        : secondsToNextHour;\n\n    outp.push({\n      hour: current.getHours(),\n      minutes: Math.round((seconds / 60) * 100) / 100\n    });\n    current = nextHour;\n  }\n\n  return outp;\n};\n\nexport const getChartData = tasks => {\n  let dataArr = [...new Array(24)].map(() => ({\n    minutes: 0\n  }));\n  tasks.forEach(task => {\n    const minutesPerHour = getMinutesPerHour(task.start, task.duration);\n    minutesPerHour.forEach(range => {\n      dataArr[range.hour].minutes = range.minutes;\n    });\n  });\n  return dataArr.map(item => ({\n    ...item,\n    minutes: Math.round(item.minutes * 2) / 2\n  }));\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BarChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { Button } from '@material-ui/core';\nimport { getChartData } from '../../helpers/taskChart';\nimport { bindActionCreators } from 'redux';\nimport { generateTasks, resetTasks } from '../../actions/dataTasks.actions';\nimport PropTypes from 'prop-types';\nimport './TasksChart.scss';\n\nclass TasksChart extends Component {\n  render() {\n    const { tasks, generateTasks, resetTasks } = this.props;\n\n    const dataArr = getChartData(tasks);\n    return (\n      <div className=\"tasks-chart\">\n        <ResponsiveContainer height={500}>\n          <BarChart className=\"bar-chart\" data={dataArr}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"minutes\" fill=\"#8884d8\" />\n          </BarChart>\n        </ResponsiveContainer>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"action-button right\"\n          onClick={generateTasks}\n        >\n          Generate\n        </Button>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"action-button right\"\n          onClick={() => resetTasks()}\n        >\n          Reset All\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ tasks: state.tasks });\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ generateTasks, resetTasks }, dispatch);\n\nTasksChart.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      start: PropTypes.number,\n      duration: PropTypes.number\n    })\n  ),\n  generateTasks: PropTypes.func,\n  resetTasks: PropTypes.func\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TasksChart);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Button\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { deleteTask } from '../../actions/dataTasks.actions';\nimport './TasksLog.scss';\nimport { HHMMSS } from '../../helpers/time';\nimport PropTypes from 'prop-types';\n\nclass TasksLog extends Component {\n  render() {\n    const { tasks, deleteTask } = this.props;\n    return (\n      <div className=\"tasks-log\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>№</TableCell>\n              <TableCell align=\"center\">Task</TableCell>\n              <TableCell align=\"center\">Time Start</TableCell>\n              <TableCell align=\"center\">Time end</TableCell>\n              <TableCell align=\"center\">Time Spend</TableCell>\n              <TableCell align=\"center\">Info</TableCell>\n              <TableCell align=\"center\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {tasks.map((task, index) => (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                <TableCell align=\"center\">{task.name}</TableCell>\n                <TableCell align=\"center\">{HHMMSS(task.start)}</TableCell>\n                <TableCell align=\"center\">\n                  {HHMMSS(task.start + task.duration)}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {HHMMSS(task.duration, true)}\n                </TableCell>\n                <TableCell align=\"center\" className=\"wrapper\">\n                  <Link to={`/tasks/${task.id}`} className=\"link\">\n                    <Button\n                      className=\"action-button\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      INFO\n                    </Button>\n                  </Link>\n                </TableCell>\n                <TableCell align=\"center\" className=\"wrapper\">\n                  <Button\n                    className=\"action-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => deleteTask(index)}\n                  >\n                    DELETE\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ tasks: state.tasks });\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ deleteTask }, dispatch);\n\nTasksLog.propTypes = {\n  tasks: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      start: PropTypes.number,\n      duration: PropTypes.number\n    })\n  ),\n  deleteTask: PropTypes.func\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TasksLog);\n","import React, { Component } from 'react';\nimport { AppBar, Tabs, Tab } from '@material-ui/core/';\nimport './DataTasks.scss';\nimport { Route, withRouter } from 'react-router-dom';\nimport TasksChart from '../TasksChart/TasksChart';\nimport TasksLog from '../TasksLog/TasksLog';\nimport PropTypes from 'prop-types';\n\nclass DataTasks extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.location.pathname === '/chart' ? 1 : 0\n    };\n  }\n\n  setActiveTab = (event, activeTab) => {\n    if (this.state.activeTab === activeTab) return;\n    this.setState({ activeTab });\n    const route = activeTab === 0 ? '/' : '/chart';\n    this.props.history.push(route);\n  };\n  render() {\n    const { activeTab } = this.state;\n    return (\n      <div className=\"tabs-menu\">\n        <AppBar position=\"static\">\n          <Tabs\n            className=\"header-menu\"\n            value={activeTab}\n            onChange={this.setActiveTab}\n          >\n            <Tab className=\"tasks-menu\" label=\"TASKS LOG\" />\n            <Tab className=\"tasks-menu\" label=\"TASKS CHART\" />\n          </Tabs>\n        </AppBar>\n\n        <Route exact path=\"/\" component={TasksLog} />\n        <Route exact path=\"/chart\" component={TasksChart} />\n      </div>\n    );\n  }\n}\n\nDataTasks.propTypes = {\n  history: PropTypes.object,\n  location: PropTypes.shape({\n    pathname: PropTypes.string\n  })\n};\n\nexport default withRouter(DataTasks);\n","import React, { Component, Fragment } from 'react';\n\nimport Timer from '../Components/Timer/Timer';\nimport DataTabs from '../Components/DataTasks/DataTasks';\n\nclass Main extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Timer />\n        <DataTabs />\n      </Fragment>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './TimerInfo.scss';\nimport { Link, Redirect } from 'react-router-dom';\nimport { HHMMSS } from '../../helpers/time';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Button\n} from '@material-ui/core';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass TimerInfo extends Component {\n  render() {\n    const { id } = this.props.match.params;\n    const task = this.props.tasks.find(t => t.id === id);\n    if (!task) return <Redirect to={`/404/${id}`} />;\n    return (\n      <div>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell align=\"center\">Task</TableCell>\n              <TableCell align=\"center\">Time Start</TableCell>\n              <TableCell align=\"center\">Time end</TableCell>\n              <TableCell align=\"center\">Time Spend</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                {task.id}\n              </TableCell>\n              <TableCell align=\"center\">{task.name}</TableCell>\n              <TableCell align=\"center\">{HHMMSS(task.start)}</TableCell>\n              <TableCell align=\"center\">\n                {HHMMSS(task.start + task.duration)}\n              </TableCell>\n              <TableCell align=\"center\">\n                {HHMMSS(task.duration, true)}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n\n        <div className=\"wrapper\">\n          <Link to=\"/\" className=\"link\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"action-button right\"\n            >\n              Go Back\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nTimerInfo.propTypes = {\n  timer: PropTypes.shape({\n    name: PropTypes.string,\n    start: PropTypes.number,\n    duration: PropTypes.number\n  })\n};\n\nconst mapStateToProps = state => ({ tasks: state.tasks });\n\nexport default connect(mapStateToProps)(TimerInfo);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport NotFound from '../Components/NotFound/NotFound';\nimport Main from '../containers/Main';\nimport TimerInfo from '../Components/TimerInfo/TimerInfo';\nimport PropTypes from 'prop-types';\n\nclass Router extends Component {\n  render() {\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/404/:taskId?\" component={NotFound} />\n          <Route exact path=\"/tasks/:id\" component={TimerInfo} />\n          <Route exact path={['/', '/chart']} component={Main} />\n          <Redirect to={'/404'} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nRouter.propTypes = {\n  tasks: PropTypes.array\n};\n\nexport default Router;\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport appReducer from './app.reducer';\nimport appSagas from './app.sagas';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport Router from './router/Router';\nimport { reHydrateStore } from './helpers/sagas';\n\nimport './App.scss';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  appReducer,\n  reHydrateStore(),\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\n);\nsagaMiddleware.run(appSagas);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Router />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { getItem } from './localStorage';\r\nimport { ACTIVE_TIMER } from '../constants/timer.constants';\r\nimport { TASKS } from '../constants/dataTasks.constants';\r\n\r\nexport const reHydrateStore = t => {\r\n  let tasks = getItem(TASKS);\r\n  let activeTimer = getItem(ACTIVE_TIMER);\r\n\r\n  let store = {};\r\n  if (tasks) store.tasks = JSON.parse(tasks);\r\n  if (activeTimer) store.activeTimer = JSON.parse(activeTimer);\r\n  return store;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}