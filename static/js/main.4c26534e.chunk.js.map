{"version":3,"sources":["main/dataTabs/dataTabs.constants.js","helpers/localStorage.js","main/dataTabs/dataTabs.reducer.js","app.reducer.js","main/dataTabs/dataTabs.actions.js","helpers/math.js","main/dataTabs/dataTabs.sagas.js","app.sagas.js","notFound/NotFound.jsx","main/timer/alert/Alert.jsx","main/timer/timer.constants.js","helpers/time.js","main/timer/Timer.jsx","main/dataTabs/tasksChart/taskChart.service.js","main/dataTabs/tasksChart/TasksChart.jsx","main/dataTabs/tasksLog/TasksLog.jsx","main/dataTabs/DataTabs.jsx","main/Main.jsx","timerInfo/TimerInfo.jsx","router/Router.jsx","App.js","serviceWorker.js","index.js"],"names":["TIMERS","ADD_TIMER","DELETE_TIMER","GEN_TIMERS","SET_TIMERS","PREFIX","setItem","key","data","localStorage","concat","getItem","removeItem","localStorageTimers","clear","initialState","JSON","parse","timersReducer","state","arguments","length","undefined","action","type","Object","toConsumableArray","payload","timersCopy","splice","appReducer","combineReducers","timers","addTimer","timer","deleteTimer","timerArrayIndex","generateTimers","setTimers","generateRandomInt","min","max","Math","round","random","setTimersToLocalStorage","generateTimersSaga","watchData","regenerator_default","a","wrap","_context","prev","next","select","store","sent","stringify","stop","_marked","range","dayStart","dayEnd","i","_context2","Date","setHours","push","id","uuidv1","name","getTime","start","duration","put","_marked2","_context3","all","takeLatest","_marked3","rootSaga","app_sagas_marked","NotFound","react_default","createElement","PureComponent","AlertModal","_this$props","this","props","isOpened","onClose","index_es","open","aria-labelledby","aria-describedby","className","onClick","color","autoFocus","TIMER_START_TIME","HHMMSS","time","isUTC","date","toISOString","substr","toLocaleTimeString","Timer","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onStart","setState","setInterval","onStop","isModalOpened","clearInterval","onTaskNameChange","e","target","value","trim","localStorageStartTime","Number","_this2","_this$state","placeholder","margin","onChange","variant","alert_Alert","Component","connect","dispatch","bindActionCreators","getSeconds","getMinutes","getChartData","dataArr","Array","map","minutes","forEach","end","outp","current","secondsToNextHour","nextHour","seconds","hour","getHours","getMinutesPerHour","TasksChart","es6","height","strokeDasharray","dataKey","fill","TasksLog","align","index","component","scope","react_router_dom","to","DataTabs","setActiveTab","event","activeTab","route","history","location","pathname","position","label","react_router","exact","path","withRouter","Main","react","main_timer_Timer","main_dataTabs_DataTabs","TimerInfo","Router","basename","process","render","find","t","match","params","src_timerInfo_TimerInfo","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","run","appSagas","App","es","router_Router","Boolean","window","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4c26534e.chunk.js","sourcesContent":["//Local Storage\nexport const TIMERS = 'timers';\n//Reducer\nexport const ADD_TIMER = 'ADD_TIMER';\nexport const DELETE_TIMER = 'DELETE_TIMER';\nexport const GEN_TIMERS = 'GEN_TIMERS';\nexport const SET_TIMERS = 'SET_TIMERS';\n","const PREFIX = 'brocoders:test4:';\n\nexport const setItem = (key, data) =>\n  localStorage.setItem(`${PREFIX}${key}`, data);\n\nexport const getItem = key => localStorage.getItem(`${PREFIX}${key}`);\n\nexport const removeItem = key => localStorage.removeItem(`${PREFIX}${key}`);\n\nexport const clear = localStorage.clear;\n","import {\n  TIMERS,\n  ADD_TIMER,\n  DELETE_TIMER,\n  SET_TIMERS\n} from './dataTabs.constants';\nimport { getItem } from '../../helpers/localStorage';\n\nconst localStorageTimers = getItem(TIMERS);\n\nconst initialState = localStorageTimers ? JSON.parse(localStorageTimers) : [];\n\nconst timersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_TIMER:\n      return [...state, action.payload];\n    case DELETE_TIMER:\n      const timersCopy = [...state];\n      timersCopy.splice(action.payload, 1);\n      return timersCopy;\n    case SET_TIMERS:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\nexport default timersReducer;\n","import { combineReducers } from 'redux';\n\nimport timersReducer from './main/dataTabs/dataTabs.reducer';\n\nconst appReducer = combineReducers({\n  timers: timersReducer\n});\n\nexport default appReducer;\n","import {\n  ADD_TIMER,\n  DELETE_TIMER,\n  GEN_TIMERS,\n  SET_TIMERS\n} from './dataTabs.constants';\n\nexport const addTimer = timer => ({ type: ADD_TIMER, payload: timer });\nexport const deleteTimer = timerArrayIndex => ({\n  type: DELETE_TIMER,\n  payload: timerArrayIndex\n});\nexport const generateTimers = () => ({ type: GEN_TIMERS });\nexport const setTimers = timers => ({ type: SET_TIMERS, payload: timers });\n","export const generateRandomInt = (min, max) =>\n  Math.round(Math.random() * (max - min) + min);\n","import uuidv1 from 'uuid/v1';\nimport { put, all, takeLatest, select } from 'redux-saga/effects';\nimport { setTimers } from './dataTabs.actions';\nimport {\n  ADD_TIMER,\n  DELETE_TIMER,\n  GEN_TIMERS,\n  SET_TIMERS,\n  TIMERS\n} from './dataTabs.constants';\nimport { setItem } from '../../helpers/localStorage';\nimport { generateRandomInt } from '../../helpers/math';\n\nfunction* setTimersToLocalStorage() {\n  const timers = yield select(store => store.timers);\n  setItem(TIMERS, JSON.stringify(timers));\n}\n\nfunction* generateTimersSaga() {\n  const range = generateRandomInt(10, 15);\n\n  const dayStart = new Date();\n  dayStart.setHours(0, 0, 0, 0);\n  const dayEnd = new Date();\n  dayEnd.setHours(23, 59, 59, 999);\n\n  let timers = [];\n  for (let i = 0; i < range; i++) {\n    timers.push({\n      id: uuidv1(),\n      name: `task ${i + 1}_${new Date().getTime()}`,\n      start: generateRandomInt(dayStart.getTime(), dayEnd.getTime()),\n      duration: generateRandomInt(10, 90) * 60 * 1000\n    });\n  }\n\n  yield put(setTimers(timers));\n}\n\nexport function* watchData() {\n  yield all([\n    takeLatest(ADD_TIMER, setTimersToLocalStorage),\n    takeLatest(DELETE_TIMER, setTimersToLocalStorage),\n    takeLatest(SET_TIMERS, setTimersToLocalStorage),\n    takeLatest(GEN_TIMERS, generateTimersSaga)\n  ]);\n}\n","import { all } from 'redux-saga/effects';\nimport { watchData } from './main/dataTabs/dataTabs.sagas';\n\nexport default function* rootSaga() {\n  yield all([watchData()]);\n}\n","import React, { PureComponent } from 'react';\n\nimport './NotFound.scss';\n\nclass NotFound extends PureComponent {\n  render() {\n    return <div>Page is not found.</div>;\n  }\n}\n\nexport default NotFound;\n","import React, { PureComponent } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle\n} from '@material-ui/core';\nimport './Alert.scss';\n\nclass AlertModal extends PureComponent {\n  render() {\n    const { isOpened, onClose } = this.props;\n    return (\n      <Dialog\n        open={isOpened}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n        className=\"alert-modal\"\n      >\n        <DialogTitle className=\"alert-dialog-title\">\n          {'Empty task name'}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText className=\"alert-dialog-description\">\n            You are trying to close your task without a name, enter the title\n            and try again!\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            className=\"alert-dialog-button\"\n            onClick={onClose}\n            color=\"primary\"\n            autoFocus\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    );\n  }\n}\n\nexport default AlertModal;\n","export const TIMER_START_TIME = 'timerStartTime';\n","export const HHMMSS = (time, isUTC) => {\n  const date = new Date(time);\n  if (isUTC) return date.toISOString().substr(11, 8);\n  return date.toLocaleTimeString();\n};\n","import React, { Component } from 'react';\nimport { Button, TextField, Avatar } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport uuidv1 from 'uuid/v1';\n\nimport AlertModal from './alert/Alert';\nimport { setItem, getItem, removeItem } from '../../helpers/localStorage';\nimport { addTimer } from '../dataTabs/dataTabs.actions';\nimport { TIMER_START_TIME } from './timer.constants';\nimport { HHMMSS } from '../../helpers/time';\n\nimport './Timer.scss';\n\nclass Timer extends Component {\n  constructor(props) {\n    super(props);\n    this.timer = null;\n    const localStorageStartTime = getItem(TIMER_START_TIME);\n    this.state = {\n      name: '',\n      duration: 0,\n      start: localStorageStartTime ? Number(localStorageStartTime) : 0,\n      isModalOpened: false\n    };\n  }\n\n  componentWillMount() {\n    if (this.state.start) this.onStart(this.state.start);\n  }\n\n  onStart = (start = new Date().getTime()) => {\n    this.setState({ start, duration: new Date().getTime() - start });\n    setItem(TIMER_START_TIME, start);\n    this.timer = setInterval(() => {\n      this.setState({\n        duration: new Date().getTime() - this.state.start\n      });\n    }, 1000);\n  };\n\n  onStop = () => {\n    if (!this.state.name) return this.setState({ isModalOpened: true });\n\n    clearInterval(this.timer);\n\n    this.props.addTimer({\n      id: uuidv1(),\n      start: this.state.start,\n      duration: this.state.duration,\n      name: this.state.name\n    });\n\n    removeItem(TIMER_START_TIME);\n\n    this.setState({ name: '', start: 0, duration: 0 });\n  };\n\n  onTaskNameChange = e => this.setState({ name: e.target.value.trim() });\n\n  render() {\n    const { name, start, duration, isModalOpened } = this.state;\n\n    return (\n      <div className=\"Timer\">\n        <TextField\n          id=\"standard-bare\"\n          placeholder=\"Name of your task\"\n          value={name}\n          margin=\"normal\"\n          className=\"text-field\"\n          onChange={this.onTaskNameChange}\n        />\n        <Avatar className=\"timer-circle\">{HHMMSS(duration, true)}</Avatar>\n\n        {!!start && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"action-button\"\n            onClick={this.onStop}\n          >\n            Stop\n          </Button>\n        )}\n\n        {!start && (\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className=\"action-button\"\n            onClick={() => this.onStart()}\n          >\n            Start\n          </Button>\n        )}\n\n        <AlertModal\n          isOpened={isModalOpened}\n          onClose={() => this.setState({ isModalOpened: false })}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ addTimer }, dispatch);\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(Timer);\n","const getSeconds = time => time.getSeconds() + time.getMinutes() * 60;\n\nconst getMinutesPerHour = (start, duration) => {\n  const end = new Date(+start + +duration);\n  start = new Date(start);\n\n  const outp = [];\n\n  let current = start;\n\n  while (current < end) {\n    const secondsToNextHour = 60 * 60 - getSeconds(current);\n\n    const nextHour = new Date(+current + secondsToNextHour * 1000);\n    const seconds =\n      nextHour > end\n        ? getSeconds(end) - getSeconds(current)\n        : secondsToNextHour;\n\n    outp.push({\n      hour: current.getHours(),\n      minutes: Math.round((seconds / 60) * 100) / 100\n    });\n    current = nextHour;\n  }\n\n  return outp;\n};\n\nexport const getChartData = timers => {\n  let dataArr = [...new Array(24)].map(() => ({ minutes: 0 }));\n  timers.forEach(timer => {\n    const minutesPerHour = getMinutesPerHour(timer.start, timer.duration);\n    minutesPerHour.forEach(range => {\n      dataArr[range.hour].minutes = range.minutes;\n    });\n  });\n  return dataArr;\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  BarChart,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Bar,\n  CartesianGrid,\n  Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport { Button } from '@material-ui/core';\nimport { getChartData } from './taskChart.service';\nimport { bindActionCreators } from 'redux';\nimport { generateTimers } from '../dataTabs.actions';\nimport './TasksChart.scss';\n\nclass TasksChart extends Component {\n  render() {\n    const { timers, generateTimers } = this.props;\n\n    const dataArr = getChartData(timers);\n\n    return (\n      <div className=\"tasks-chart\">\n        <ResponsiveContainer height={500}>\n          <BarChart className=\"bar-chart\" data={dataArr}>\n            <CartesianGrid strokeDasharray=\"3 3\" />\n            <XAxis />\n            <YAxis />\n            <Tooltip />\n            <Legend />\n            <Bar dataKey=\"minutes\" fill=\"#8884d8\" />\n          </BarChart>\n        </ResponsiveContainer>\n\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          className=\"action-button right\"\n          onClick={() => generateTimers()}\n        >\n          Generate\n        </Button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ timers: state.timers });\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ generateTimers }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TasksChart);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Button\n} from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { deleteTimer } from '../dataTabs.actions';\nimport './TasksLog.scss';\nimport { HHMMSS } from '../../../helpers/time';\n\nclass TasksLog extends Component {\n  render() {\n    const { timers, deleteTimer } = this.props;\n\n    return (\n      <div className=\"tasks-log\">\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>№</TableCell>\n              <TableCell align=\"center\">Task</TableCell>\n              <TableCell align=\"center\">Time Start</TableCell>\n              <TableCell align=\"center\">Time end</TableCell>\n              <TableCell align=\"center\">Time Spend</TableCell>\n              <TableCell align=\"center\">Info</TableCell>\n              <TableCell align=\"center\">Delete</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {timers.map((timer, index) => (\n              <TableRow key={index}>\n                <TableCell component=\"th\" scope=\"row\">\n                  {index + 1}\n                </TableCell>\n                <TableCell align=\"center\">{timer.name}</TableCell>\n                <TableCell align=\"center\">{HHMMSS(timer.start)}</TableCell>\n                <TableCell align=\"center\">\n                  {HHMMSS(timer.start + timer.duration)}\n                </TableCell>\n                <TableCell align=\"center\">\n                  {HHMMSS(timer.duration, true)}\n                </TableCell>\n                <TableCell align=\"center\" className=\"wrapper\">\n                  <Link to={`/tasks/${timer.id}`} className=\"link\">\n                    <Button\n                      className=\"action-button\"\n                      variant=\"contained\"\n                      color=\"primary\"\n                    >\n                      INFO\n                    </Button>\n                  </Link>\n                </TableCell>\n                <TableCell align=\"center\" className=\"wrapper\">\n                  <Button\n                    className=\"action-button\"\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={() => deleteTimer(index)}\n                  >\n                    DELETE\n                  </Button>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ timers: state.timers });\nconst mapDispatchToProps = dispatch =>\n  bindActionCreators({ deleteTimer }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TasksLog);\n","import React, { Component } from 'react';\nimport { AppBar, Tabs, Tab } from '@material-ui/core/';\nimport './DataTabs.scss';\nimport { Route, withRouter } from 'react-router-dom';\nimport TasksChart from './tasksChart/TasksChart';\nimport TasksLog from './tasksLog/TasksLog';\n\nclass DataTabs extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      activeTab: this.props.location.pathname === '/chart' ? 1 : 0\n    };\n  }\n\n  setActiveTab = (event, activeTab) => {\n    if (this.state.activeTab === activeTab) return;\n    this.setState({ activeTab });\n    const route = activeTab === 0 ? '/' : '/chart';\n    this.props.history.push(route);\n  };\n  render() {\n    const { activeTab } = this.state;\n\n    return (\n      <div className=\"tabs-menu\">\n        <AppBar position=\"static\">\n          <Tabs\n            className=\"header-menu\"\n            value={activeTab}\n            onChange={this.setActiveTab}\n          >\n            <Tab className=\"tasks-menu\" label=\"TASKS LOG\" />\n            <Tab className=\"tasks-menu\" label=\"TASKS CHART\" />\n          </Tabs>\n        </AppBar>\n\n        <Route exact path=\"/\" component={TasksLog} />\n        <Route exact path=\"/chart\" component={TasksChart} />\n      </div>\n    );\n  }\n}\n\nexport default withRouter(DataTabs);\n","import React, { Component, Fragment } from 'react';\n\nimport Timer from './timer/Timer';\nimport DataTabs from './dataTabs/DataTabs';\n\nclass Main extends Component {\n  render() {\n    return (\n      <Fragment>\n        <Timer />\n        <DataTabs />\n      </Fragment>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './TimerInfo.scss';\nimport { Link } from 'react-router-dom';\nimport { HHMMSS } from '../helpers/time';\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Button\n} from '@material-ui/core';\n\nclass TimerInfo extends Component {\n  render() {\n    const { timer } = this.props;\n    return (\n      <div>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <TableCell>Id</TableCell>\n              <TableCell align=\"center\">Task</TableCell>\n              <TableCell align=\"center\">Time Start</TableCell>\n              <TableCell align=\"center\">Time end</TableCell>\n              <TableCell align=\"center\">Time Spend</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow>\n              <TableCell component=\"th\" scope=\"row\">\n                {timer.id}\n              </TableCell>\n              <TableCell align=\"center\">{timer.name}</TableCell>\n              <TableCell align=\"center\">{HHMMSS(timer.start)}</TableCell>\n              <TableCell align=\"center\">\n                {HHMMSS(timer.start + timer.duration)}\n              </TableCell>\n              <TableCell align=\"center\">\n                {HHMMSS(timer.duration, true)}\n              </TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n\n        <div className=\"wrapper\">\n          <Link to=\"/\" className=\"link\">\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"action-button right\"\n            >\n              Go Back\n            </Button>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TimerInfo;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport NotFound from '../notFound/NotFound';\nimport Main from '../main/Main';\nimport TimerInfo from '../timerInfo/TimerInfo';\n\nclass Router extends Component {\n  render() {\n    const { timers } = this.props;\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <Switch>\n          <Route exact path=\"/notFound\" component={NotFound} />\n          <Route\n            exact\n            path=\"/tasks/:id\"\n            render={props => {\n              const timer = timers.find(t => t.id === props.match.params.id);\n              if (!timer) {\n                return <Redirect to={'/notFound'} />;\n              }\n\n              return <TimerInfo timer={timer} />;\n            }}\n          />\n          <Route path=\"/\" component={Main} />\n          <Route exact path=\"*\" component={NotFound} />\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({ timers: state.timers });\n\nexport default connect(mapStateToProps)(Router);\n","import React, { Component } from 'react';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport appReducer from './app.reducer';\nimport appSagas from './app.sagas';\n\nimport Router from './router/Router';\n\nimport './App.scss';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(appReducer, applyMiddleware(sagaMiddleware));\nsagaMiddleware.run(appSagas);\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <Router />\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}